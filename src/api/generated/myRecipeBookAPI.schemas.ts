/**
 * Generated by orval v7.6.0 üç∫
 * Do not edit manually.
 * MyRecipeBook.API
 * OpenAPI spec version: 1.0
 */
export type CookingTime = typeof CookingTime[keyof typeof CookingTime];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const CookingTime = {
  NUMBER_0: 0,
  NUMBER_1: 1,
  NUMBER_2: 2,
  NUMBER_3: 3,
} as const;

export type Difficulty = typeof Difficulty[keyof typeof Difficulty];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const Difficulty = {
  NUMBER_0: 0,
  NUMBER_1: 1,
  NUMBER_2: 2,
} as const;

export type DishType = typeof DishType[keyof typeof DishType];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DishType = {
  NUMBER_0: 0,
  NUMBER_1: 1,
  NUMBER_2: 2,
  NUMBER_3: 3,
  NUMBER_4: 4,
  NUMBER_5: 5,
  NUMBER_6: 6,
} as const;

export interface RequestRecipeFilterJson {
  /** @nullable */
  titleIngredient?: string | null;
  /** @nullable */
  cookingTimes?: CookingTime[] | null;
  /** @nullable */
  difficulties?: Difficulty[] | null;
  /** @nullable */
  dishTypes?: DishType[] | null;
}

export interface RequestRecipeIngredientsForAIJson {
  /** @nullable */
  ingredients?: string[] | null;
}

export interface RequestRecipeInstructionJson {
  step?: number;
  /** @nullable */
  text?: string | null;
}

export interface RequestRecipeJson {
  /** @nullable */
  title?: string | null;
  cookingTime?: CookingTime;
  difficulty?: Difficulty;
  /** @nullable */
  ingredients?: string[] | null;
  /** @nullable */
  instructions?: RequestRecipeInstructionJson[] | null;
  /** @nullable */
  dishTypes?: DishType[] | null;
}

export interface RequestRefreshTokenJson {
  /** @nullable */
  refreshToken?: string | null;
}

export interface RequestUserChangePasswordJson {
  /** @nullable */
  currentPassword?: string | null;
  /** @nullable */
  newPassword?: string | null;
}

export interface RequestUserLoginJson {
  /** @nullable */
  email?: string | null;
  /** @nullable */
  password?: string | null;
}

export interface RequestUserRegisterJson {
  /** @nullable */
  name?: string | null;
  /** @nullable */
  email?: string | null;
  /** @nullable */
  password?: string | null;
}

export interface RequestUserResetPasswordJson {
  /** @nullable */
  email?: string | null;
  /** @nullable */
  code?: string | null;
  /** @nullable */
  newPassword?: string | null;
}

export interface RequestUserUpdateJson {
  /** @nullable */
  name?: string | null;
  /** @nullable */
  email?: string | null;
}

export interface ResponseErrorJson {
  /** @nullable */
  errorMessages?: string[] | null;
  /** @nullable */
  method?: string | null;
}

export interface ResponseInstructionJson {
  step?: number;
  /** @nullable */
  text?: string | null;
}

export interface ResponseRecipeJson {
  id?: string;
  /** @nullable */
  title?: string | null;
  cookingTime?: CookingTime;
  difficulty?: Difficulty;
  /** @nullable */
  imageUrl?: string | null;
  /** @nullable */
  ingredients?: string[] | null;
  /** @nullable */
  instructions?: ResponseInstructionJson[] | null;
  /** @nullable */
  dishTypes?: DishType[] | null;
}

export interface ResponseShortRecipeJson {
  id?: string;
  /** @nullable */
  title?: string | null;
  quantityIngredients?: number;
  /** @nullable */
  imageUrl?: string | null;
}

export interface ResponseSuccessLogoutJson {
  /** @nullable */
  message?: string | null;
}

export interface ResponseTokenJson {
  /** @nullable */
  token?: string | null;
  /** @nullable */
  refreshToken?: string | null;
}

export interface ResponseUserLoginJson {
  /** @nullable */
  name?: string | null;
  /** @nullable */
  email?: string | null;
  responseToken?: ResponseTokenJson;
}

export interface ResponseUserProfileJson {
  /** @nullable */
  name?: string | null;
  /** @nullable */
  email?: string | null;
}

export interface ResponseUserRegisterJson {
  /** @nullable */
  name?: string | null;
  /** @nullable */
  email?: string | null;
  responseToken?: ResponseTokenJson;
}

export type PostRecipeRegisterBodyInstructionsItem = {
  Step?: number;
  Text?: string;
};

export type PostRecipeRegisterBody = {
  ImageFile?: Blob;
  Title?: string;
  CookingTime?: CookingTime;
  Difficulty?: Difficulty;
  Ingredients?: string[];
  DishTypes?: DishType[];
  Instructions?: PostRecipeRegisterBodyInstructionsItem[];
};

export type PutUpdateImageRecipeIdBody = {
  file?: Blob;
};

export type GetUserLoginGoogleParams = {
returnUrl?: string;
};

